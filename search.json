[{"path":"https://uchidamizuki.github.io/jpstat/README-estat.html","id":null,"dir":"","previous_headings":"","what":"e-Stat APIへのアクセス方法","title":"e-Stat APIへのアクセス方法","text":"jpstatでは，e-Stat APIのメタ情報取得 (getMetaInfo) と統計データ取得 (getStatsData) を用いて，統計表をダウンロードが可能です． e-Statでは，統計表ごとに統計表ID (statsDataId) が付与されています．統計表IDは， データセット情報ページ (例1) や 統計表・グラフ表示ページ (例2) のURLからも取得することが可能です． ここでは，例2に挙げた国勢調査データを対象として， 2010・2015年の東京都・大阪府における男女別人口を取得します． まず，estat()関数に，appIdとデータセット情報ページなどのURLまたは統計表ID (statsDataId) を入力してメタ情報 (統計データの属性情報) を取得します． 当該データには，tab，cat01，area, timeの4種類の列 (以下，キーと呼びます) が存在します． それぞれのキーには以下の情報が記載されています． デフォルトでの列名 (tabなど) アイテム数 ([2]など) コード・名称などの属性 (<code, name, level, unit>など) ここからは，それぞれのキーごとに列名・アイテム数・属性を変更する方法を説明します． それぞれのキーの情報を変更するためには，activate()関数を用いてキーを選択します． 例えば，以下のようにtabキーをアクティブにします． キーをアクティブにすると当該キーのアイテム情報が表示されます． さらに，filter()関数やselect()関数を用いてアイテム情報の絞り込みなどが可能です． ここでは，「人口」のみを選択します． 次に，cat01の「男，女及び総数2015」を選択します．rekey()関数によってキーの名称cat01を変更することが可能です（ここではsex）． キーの名称を変更することでデータダウンロード時の列名を指定ことができます． また，上と同様に属性の絞り込みを行います． ここでは，name列を選択します． 上と同様に，area（「地域2015」）とtime（「時間軸（調査年）」）の名称変更・属性絞り込みを行います． 以上の操作により，以下のように列名・アイテム数・属性が変更できました． 最後に，collect()関数を用いてデータをダウンロードします． collect()関数のnで値の名称を指定します．","code":"library(jpstat) library(dplyr) # 国勢調査 データセット情報ページ URL census <- estat(appId = \"Your e-Stat appId\",                  statsDataId = \"https://www.e-stat.go.jp/dbview?sid=0003413949\") census  #> # ☐ tab:   表章項目           [2] <code, name, level, unit> #> # ☐ cat01: 男，女及び総数2015 [3] <code, name, level> #> # ☐ area:  地域2015           [48] <code, name, level, parentCode> #> # ☐ time:  時間軸（調査年）   [21] <code, name, level> #> #  #> # Please `activate()`. census |>    activate(tab) #> # ☒ tab:   表章項目           [2] <code, name, level, unit> #> # ☐ cat01: 男，女及び総数2015 [3] <code, name, level> #> # ☐ area:  地域2015           [48] <code, name, level, parentCode> #> # ☐ time:  時間軸（調査年）   [21] <code, name, level> #> #  #> # A tibble: 2 × 4 #>   code  name     level unit            #>   <chr> <chr>    <chr> <chr>           #> 1 020   人口     \"\"    人              #> 2 1120  人口性比 \"\"    女100人につき男  # Or census |>    activate(1) #> # ☒ tab:   表章項目           [2] <code, name, level, unit> #> # ☐ cat01: 男，女及び総数2015 [3] <code, name, level> #> # ☐ area:  地域2015           [48] <code, name, level, parentCode> #> # ☐ time:  時間軸（調査年）   [21] <code, name, level> #> #  #> # A tibble: 2 × 4 #>   code  name     level unit            #>   <chr> <chr>    <chr> <chr>           #> 1 020   人口     \"\"    人              #> 2 1120  人口性比 \"\"    女100人につき男 census <- census |>    activate(tab) |>    filter(name == \"人口\") |>    # アイテム数が1つのみであるため列を全て削除   select() census <- census |>    activate(cat01) |>   rekey(\"sex\") |>    filter(name %in% c(\"男\", \"女\")) |>    select(name) census <- census |>    activate(area) |>    rekey(\"pref\") |>    filter(name %in% c(\"東京都\", \"大阪府\")) |>    select(code, name) |>       activate(time) |>    rekey(\"year\") |>    filter(name %in% c(\"2010年\", \"2015年\")) |>    select(name) census #> # ☐ tab:  表章項目           [1] <> #> # ☐ sex:  男，女及び総数2015 [2] <name> #> # ☐ pref: 地域2015           [2] <code, name> #> # ☒ year: 時間軸（調査年）   [2] <name> #> #  #> # A tibble: 2 × 1 #>   name   #>   <chr>  #> 1 2010年 #> 2 2015年 census <- census |>   collect(n = \"pop\") #> The total number of data is 8. knitr::kable(census)"},{"path":"https://uchidamizuki.github.io/jpstat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mizuki Uchida. Author, maintainer.","code":""},{"path":"https://uchidamizuki.github.io/jpstat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Uchida M (2022). jpstat: Tools Easy Use 'e-Stat', 'RESAS' API, Etc. https://github.com/UchidaMizuki/jpstat, https://uchidamizuki.github.io/jpstat/.","code":"@Manual{,   title = {jpstat: Tools for Easy Use of 'e-Stat', 'RESAS' API, Etc},   author = {Mizuki Uchida},   year = {2022},   note = {https://github.com/UchidaMizuki/jpstat, https://uchidamizuki.github.io/jpstat/}, }"},{"path":"https://uchidamizuki.github.io/jpstat/index.html","id":"jpstat-","dir":"","previous_headings":"","what":"Tools for Easy Use of e-Stat, RESAS API, Etc","title":"Tools for Easy Use of e-Stat, RESAS API, Etc","text":"README currently available Japanese. jpstatは日本政府統計のポータルサイトであるe-Statや RESAS (地域経済分析システム) などのAPIを利用するためのツールを提供します． 現在，以下のAPIに対応しています． e-Stat API: https://www.e-stat.go.jp/api/ RESAS API: https://opendata.resas-portal.go.jp 不動産取引価格情報取得API: https://www.land.mlit.go.jp/webland/api.html 「このサービスは、政府統計総合窓口(e-Stat)のAPI機能を使用していますが、サービスの内容は国によって保証されたものではありません。」","code":""},{"path":"https://uchidamizuki.github.io/jpstat/index.html","id":"インストール方法","dir":"","previous_headings":"","what":"インストール方法","title":"Tools for Easy Use of e-Stat, RESAS API, Etc","text":"jpstatの開発版は，GitHubから以下の方法でインストールできます．","code":"install.packages(\"jpstat\") # install.packages(\"devtools\") devtools::install_github(\"UchidaMizuki/jpstat\") library(jpstat) library(dplyr)"},{"path":"https://uchidamizuki.github.io/jpstat/index.html","id":"e-stat-api","dir":"","previous_headings":"","what":"e-Stat API","title":"Tools for Easy Use of e-Stat, RESAS API, Etc","text":"e-Stat APIの利用にはアカウント登録 (appIdと呼ばれるAPIキーの発行) が必要です (詳しくはホームページを参照してください)． また，データ利用に際しては利用規約に従う必要があります． データ取得・整形の一連の流れは以下のようになります． ここでは，国勢調査データを対象として， 2010・2015年の東京都・大阪府における男女別人口を取得します． 詳細な使用方法はこちらを参照してください．","code":"# メタ情報の取得 census <- estat(appId = \"Your appId\",                  statsDataId = \"https://www.e-stat.go.jp/dbview?sid=0003410379\") census  #> # ☐ tab:   表章項目         [2] <code, name, level, unit> #> # ☐ cat01: 男女_時系列      [3] <code, name, level> #> # ☐ area:  地域_時系列      [50] <code, name, level, parentCode> #> # ☐ time:  時間軸（調査年） [21] <code, name, level> #> #  #> # Please `activate()`. # 2010・2015年の東京都・大阪府における男女別人口を取得 census <- census |>       activate(tab) |>    filter(name == \"人口\") |>    select() |>       activate(cat01) |>    rekey(\"sex\") |>    filter(name %in% c(\"男\", \"女\")) |>    select(name) |>       activate(area) |>    rekey(\"pref\") |>    filter(name %in% c(\"東京都\", \"大阪府\")) |>    select(code, name) |>       activate(time) |>    rekey(\"year\") |>    filter(name %in% c(\"2010年\", \"2015年\")) |>    select(name) |>       collect(n = \"pop\") #> The total number of data is 8.  knitr::kable(census)"},{"path":"https://uchidamizuki.github.io/jpstat/index.html","id":"resas-api","dir":"","previous_headings":"","what":"RESAS API","title":"Tools for Easy Use of e-Stat, RESAS API, Etc","text":"RESAS APIの利用にはアカウント登録 (X-API-KEYと呼ばれるAPIキーの発行) が必要です (詳しくはホームページを参照してください)． RESAS APIの利用にあたっては，利用規約を確認してください (API詳細仕様)．","code":"power_for_industry <- resas(X_API_KEY = \"Your X-API-KEY\",                              \"https://opendata.resas-portal.go.jp/docs/api/v1/industry/power/forIndustry.html\") power_for_industry  #> # ✖ year:      年度            :  (Required) #> # ✖ pref_code: 都道府県コード  :  (Required) #> # ✖ city_code: 市区町村コード  :  (Required) #> # ✖ sic_code:  産業大分類コード:  (Required) #> #  #> # Please `itemise()`. power_for_industry <- power_for_industry |>   itemise(year = \"2012\",           pref_code = \"1\",           city_code = \"-\",           sic_code = \"A\") |>   collect()  knitr::kable(power_for_industry)"},{"path":"https://uchidamizuki.github.io/jpstat/index.html","id":"不動産取引価格情報取得api","dir":"","previous_headings":"","what":"不動産取引価格情報取得API","title":"Tools for Easy Use of e-Stat, RESAS API, Etc","text":"","code":"trade <- webland_trade() trade #> # ✖ from:      取引時期From  :  #> # ✖ to:        取引時期To    :  #> # ✖ pref_code: 都道府県コード:  #> # ✖ city_code: 市区町村コード:  #> #  #> # Please `itemise()`. trade <- trade |>    itemise(from = \"20201\",           to = \"20201\",           pref_code = \"01\",           city_code = \"01101\") |>    collect()  knitr::kable(trade[1:5, 1:6])"},{"path":"https://uchidamizuki.github.io/jpstat/reference/estat.html","id":null,"dir":"Reference","previous_headings":"","what":"Access 'e-Stat' data — estat","title":"Access 'e-Stat' data — estat","text":"estat() gets meta-information statistical table using getMetaInfo 'e-Stat' API, returns estat object allows editing meta-information dplyr::filter() dplyr::select().","code":""},{"path":"https://uchidamizuki.github.io/jpstat/reference/estat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access 'e-Stat' data — estat","text":"","code":"estat(   appId,   statsDataId,   lang = c(\"J\", \"E\"),   query = list(),   path = \"rest/3.0/app/json/\" )"},{"path":"https://uchidamizuki.github.io/jpstat/reference/estat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access 'e-Stat' data — estat","text":"appId 'appId' 'e-Stat' API. statsDataId statistical data ID 'e-Stat'. lang language, Japanese (\"J\") English (\"E\"). query list additional queries. path e-Stat API path.","code":""},{"path":"https://uchidamizuki.github.io/jpstat/reference/estat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access 'e-Stat' data — estat","text":"estat object.","code":""},{"path":[]},{"path":"https://uchidamizuki.github.io/jpstat/reference/estat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access 'e-Stat' data — estat","text":"","code":"if (FALSE) { estat(\"Your appId\", \"https://www.e-stat.go.jp/dbview?sid=0003433219\") }"},{"path":"https://uchidamizuki.github.io/jpstat/reference/estat_table_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get table information for 'e-Stat' data — estat_table_info","title":"Get table information for 'e-Stat' data — estat_table_info","text":"Get table information 'e-Stat' data","code":""},{"path":"https://uchidamizuki.github.io/jpstat/reference/estat_table_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get table information for 'e-Stat' data — estat_table_info","text":"","code":"estat_table_info(x)"},{"path":"https://uchidamizuki.github.io/jpstat/reference/estat_table_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get table information for 'e-Stat' data — estat_table_info","text":"x estat object.","code":""},{"path":"https://uchidamizuki.github.io/jpstat/reference/estat_table_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get table information for 'e-Stat' data — estat_table_info","text":"tbl_df table information.","code":""},{"path":"https://uchidamizuki.github.io/jpstat/reference/jpstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools for easy use of 'e-Stat' API — jpstat","title":"Tools for easy use of 'e-Stat' API — jpstat","text":"Provides tools use API 'e-Stat' (https://www.e-stat.go.jp/), portal site Japanese government statistics, 'RESAS' (Regional Economy Society Analyzing System, https://resas.go.jp).","code":""},{"path":[]},{"path":"https://uchidamizuki.github.io/jpstat/reference/jpstat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tools for easy use of 'e-Stat' API — jpstat","text":"Maintainer: Mizuki Uchida uchidamizuki@vivaldi.net","code":""},{"path":"https://uchidamizuki.github.io/jpstat/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. navigatr activate, deactivate, itemise, itemize, rekey, rekey_with","code":""},{"path":"https://uchidamizuki.github.io/jpstat/reference/resas.html","id":null,"dir":"Reference","previous_headings":"","what":"Access 'RESAS' data — resas","title":"Access 'RESAS' data — resas","text":"Access 'RESAS' data","code":""},{"path":"https://uchidamizuki.github.io/jpstat/reference/resas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access 'RESAS' data — resas","text":"","code":"resas(X_API_KEY, path)"},{"path":"https://uchidamizuki.github.io/jpstat/reference/resas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access 'RESAS' data — resas","text":"X_API_KEY 'X-API-KEY' 'RESAS' API. path 'RESAS' API path.","code":""},{"path":"https://uchidamizuki.github.io/jpstat/reference/resas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access 'RESAS' data — resas","text":"resas object.","code":""},{"path":[]},{"path":"https://uchidamizuki.github.io/jpstat/reference/webland.html","id":null,"dir":"Reference","previous_headings":"","what":"Information on real estate transaction prices API — webland","title":"Information on real estate transaction prices API — webland","text":"Collect data information real estate transaction prices API provided Japan's Ministry Land, Infrastructure, Transport Tourism.","code":""},{"path":"https://uchidamizuki.github.io/jpstat/reference/webland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Information on real estate transaction prices API — webland","text":"","code":"webland_trade(lang = c(\"ja\", \"en\"))  webland_city(lang = c(\"ja\", \"en\"))"},{"path":"https://uchidamizuki.github.io/jpstat/reference/webland.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Information on real estate transaction prices API — webland","text":"lang Language.","code":""},{"path":"https://uchidamizuki.github.io/jpstat/reference/webland.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Information on real estate transaction prices API — webland","text":"webland_trade() webland_trade object. creating query itemise() applying collect(), real estate transaction prices collected. webland_city() webland_city object. Obtains list target municipalities way webland_trade().","code":""},{"path":"https://uchidamizuki.github.io/jpstat/reference/webland.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Information on real estate transaction prices API — webland","text":"","code":"if (FALSE) { # Collect trade data webland_trade() |>   itemise(from = \"20151\",           to = \"20152\",           city_code = \"13102\") |>   collect()  # Collect target municipalities webland_city() |>   itemise(pref_code = \"13\") |>   collect() }"},{"path":"https://uchidamizuki.github.io/jpstat/news/index.html","id":"jpstat-030","dir":"Changelog","previous_headings":"","what":"jpstat 0.3.0","title":"jpstat 0.3.0","text":"CRAN release: 2022-11-21 Add resas() use ‘RESAS’ API (https://opendata.resas-portal.go.jp). Add webland() use information real estate transaction prices API (https://www.land.mlit.go.jp/webland/api.html). Add summary.estat() deprecate estat_table_info().","code":""},{"path":"https://uchidamizuki.github.io/jpstat/news/index.html","id":"jpstat-021","dir":"Changelog","previous_headings":"","what":"jpstat 0.2.1","title":"jpstat 0.2.1","text":"CRAN release: 2022-05-10 Bug fix column selection.","code":""},{"path":"https://uchidamizuki.github.io/jpstat/news/index.html","id":"jpstat-020","dir":"Changelog","previous_headings":"","what":"jpstat 0.2.0","title":"jpstat 0.2.0","text":"CRAN release: 2022-02-24 Change package name japanstat jpstat. Add dependency navigatr package support activate() rekey() functions.","code":""},{"path":"https://uchidamizuki.github.io/jpstat/news/index.html","id":"jpstat-011","dir":"Changelog","previous_headings":"","what":"jpstat 0.1.1","title":"jpstat 0.1.1","text":"Fix Imports","code":""},{"path":[]}]
